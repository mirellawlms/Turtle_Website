"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/einleitung",{

/***/ "./src/components/TurtleViewer.tsx":
/*!*****************************************!*\
  !*** ./src/components/TurtleViewer.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Field\": function() { return /* binding */ Field; },\n/* harmony export */   \"TurtleViewer\": function() { return /* binding */ TurtleViewer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nvar Field;\n(function(Field) {\n    Field[Field[\"EMPTY\"] = 0] = \"EMPTY\";\n    Field[Field[\"WALL\"] = 1] = \"WALL\";\n    Field[Field[\"EXIT\"] = 2] = \"EXIT\";\n    Field[Field[\"START\"] = 3] = \"START\";\n})(Field || (Field = {}));\nconst TurtleViewer = (props)=>{\n    _s();\n    const { path , field , width , height  } = props;\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    //useeffect ist funktion mit 2 parameter 1. eine funktion und 2. eine array und 1 funktion wird aufgerufen, falls sich eins der array inhalte ändert\n    const draw = async (currentpath)=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const width = canvas.width;\n        const height = canvas.height;\n        if (field.length === 0) return;\n        const fieldWidth = field[0].length;\n        const fieldHeight = field.length;\n        //pixel/blockanzahl 400/10=40\n        const fieldSize = Math.min(width / fieldWidth, height / fieldHeight);\n        const Back_Swamp_Image = new Image();\n        Back_Swamp_Image.src = \"/swamp.png\";\n        await new Promise((r)=>Back_Swamp_Image.onload = r);\n        ctx.drawImage(Back_Swamp_Image, 0, 0, width, height);\n        const WallImage = new Image();\n        WallImage.src = \"/wall.png\";\n        await new Promise((r)=>WallImage.onload = r);\n        //verschiede turtle pngs\n        const TurtleImage_east = new Image();\n        TurtleImage_east.src = \"/turtle_east.png\";\n        await new Promise((r)=>TurtleImage_east.onload = r);\n        const TurtleImage_west = new Image();\n        TurtleImage_west.src = \"/turtle_west.png\";\n        await new Promise((r)=>TurtleImage_west.onload = r);\n        const TurtleImage_south = new Image();\n        TurtleImage_south.src = \"/turtle_south.png\";\n        await new Promise((r)=>TurtleImage_south.onload = r);\n        const TurtleImage_north = new Image();\n        TurtleImage_north.src = \"/turtle_north.png\";\n        await new Promise((r)=>TurtleImage_north.onload = r);\n        for(let y = 0; y < fieldHeight; y++){\n            for(let x = 0; x < fieldWidth; x++){\n                if (field[y][x] === Field.WALL) {\n                    ctx.drawImage(WallImage, x * fieldSize, y * fieldSize, fieldSize, fieldSize);\n                }\n                if (field[y][x] === Field.START) {\n                    ctx.fillStyle = \"E9967A\";\n                    ctx.fillRect(x * fieldSize, y * fieldSize, fieldSize, fieldSize);\n                }\n                if (field[y][x] === Field.EXIT) {\n                    ctx.fillStyle = \"3cb371\";\n                    ctx.fillRect(x * fieldSize, y * fieldSize, fieldSize, fieldSize);\n                }\n            }\n        }\n        // Draw path as line\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        for (const { start_x , start_y , end_x , end_y  } of currentpath){\n            ctx.moveTo(//schiebe pinsel an startwert * 40px + 40/2 da ich es in der mitte haben will\n            start_x * fieldSize + fieldSize / 2, start_y * fieldSize + fieldSize / 2);\n            ctx.lineTo(end_x * fieldSize + fieldSize / 2, end_y * fieldSize + fieldSize / 2);\n        }\n        //strich wird gemalt\n        ctx.stroke();\n        //overlay turtle über den strich und hier muss geschsut werden welche poition angezeigt wird\n        if (currentpath.length !== 0) {\n            if (currentpath[currentpath.length - 1].direction == 0) {\n                ctx.drawImage(TurtleImage_north, currentpath[currentpath.length - 1].end_x * fieldSize, currentpath[currentpath.length - 1].end_y * fieldSize, fieldSize, fieldSize);\n            }\n            if (currentpath[currentpath.length - 1].direction == 1) {\n                ctx.drawImage(TurtleImage_east, currentpath[currentpath.length - 1].end_x * fieldSize, currentpath[currentpath.length - 1].end_y * fieldSize, fieldSize, fieldSize);\n            }\n            if (currentpath[currentpath.length - 1].direction == 2) {\n                ctx.drawImage(TurtleImage_south, currentpath[currentpath.length - 1].end_x * fieldSize, currentpath[currentpath.length - 1].end_y * fieldSize, fieldSize, fieldSize);\n            }\n            if (currentpath[currentpath.length - 1].direction == 3) {\n                ctx.drawImage(TurtleImage_west, currentpath[currentpath.length - 1].end_x * fieldSize, currentpath[currentpath.length - 1].end_y * fieldSize, fieldSize, fieldSize);\n            }\n        } else {\n            ctx.drawImage(TurtleImage_south, 0, 0, fieldSize, fieldSize);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        //async damit das bild verzögert angezeigt wird\n        const run = async ()=>{\n            if (path.length === 0) {\n                //labyrinth sehe ich\n                draw([]);\n                return;\n            }\n            for(let i = 1; i <= path.length; i++){\n                const temppath = path.slice(0, i);\n                draw(temppath);\n                await new Promise((resolve, reject)=>{\n                    setTimeout(()=>{\n                        resolve();\n                    }, 600);\n                });\n            }\n        };\n        run();\n    }, [\n        path,\n        field\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: height\n    }, void 0, false, {\n        fileName: \"/Users/mirellawlms/Desktop/FH/Bachelorarbeit/Turtle_Website/src/components/TurtleViewer.tsx\",\n        lineNumber: 154,\n        columnNumber: 10\n    }, undefined);\n};\n_s(TurtleViewer, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = TurtleViewer;\nvar _c;\n$RefreshReg$(_c, \"TurtleViewer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TurtleViewer.tsx\n"));

/***/ })

});